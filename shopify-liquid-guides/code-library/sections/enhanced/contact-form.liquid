<!-- Contact Form Section - Customer Service & Lead Generation -->
{%- liquid
  assign unique = section.id | replace: '_', '' | downcase
  assign form_style = section.settings.form_style
  assign text_alignment = section.settings.text_alignment
  assign color_scheme = section.settings.color_scheme
  assign section_padding_top = section.settings.section_padding_top
  assign section_padding_bottom = section.settings.section_padding_bottom
  assign max_width = section.settings.max_width
  assign enable_two_column = section.settings.enable_two_column
  assign required_fields = section.settings.required_fields
  assign enable_captcha = section.settings.enable_captcha
-%}

<section
  id="contact-form-{{ unique }}"
  class="contact-form-section contact-form-{{ unique }} color-scheme-{{ color_scheme }} style-{{ form_style }}"
  style="
    padding-top: {{ section_padding_top }}px;
    padding-bottom: {{ section_padding_bottom }}px;
  "
  data-section-id="{{ section.id }}"
  data-section-type="contact-form"
  {% if section.settings.heading != blank %}aria-labelledby="contact-form-heading-{{ unique }}"{% endif %}
>
  <div class="contact-form-container" style="max-width: {{ max_width }}px;">
    <div class="contact-form-layout{% if enable_two_column %} two-column{% endif %}">
      <div class="contact-form-content text-{{ text_alignment }}">
        {%- if section.settings.heading != blank -%}
          <h2
            id="contact-form-heading-{{ unique }}"
            class="contact-form-heading h2"
          >
            {{ section.settings.heading | escape }}
          </h2>
        {%- endif -%}

        {%- if section.settings.subheading != blank -%}
          <div class="contact-form-subheading rte">
            {{ section.settings.subheading }}
          </div>
        {%- endif -%}

        {%- if section.settings.contact_info != blank -%}
          <div class="contact-info rte">
            {{ section.settings.contact_info }}
          </div>
        {%- endif -%}
      </div>

      <div class="contact-form-wrapper">
        {%- form 'contact', id: 'contact-form-' | append: unique, class: 'contact-form', novalidate: 'novalidate' -%}
          {%- if form.posted_successfully? -%}
            <div class="form-success" role="alert" aria-live="polite">
              <h3 class="success-heading">{{ section.settings.success_title | default: 'Thank you!' | escape }}</h3>
              <p class="success-message">{{ section.settings.success_message | default: 'Your message has been sent successfully. We will get back to you soon!' | escape }}</p>
            </div>
          {%- else -%}
            {%- if form.errors -%}
              <div class="form-errors" role="alert" aria-live="polite">
                <h3 class="error-heading">{{ 'contact.form.error_heading' | t | default: 'Please correct the following errors:' }}</h3>
                <ul class="error-list">
                  {%- for field in form.errors -%}
                    <li class="error-item">
                      {%- if field == 'form' -%}
                        {{ form.errors.messages[field] }}
                      {%- else -%}
                        {{ form.errors.translated_fields[field] | capitalize }} {{ form.errors.messages[field] }}.
                      {%- endif -%}
                    </li>
                  {%- endfor -%}
                </ul>
              </div>
            {%- endif -%}

            <div class="form-fields">
              <div class="field-group">
                <label for="contact-name-{{ unique }}" class="field-label">
                  {{ 'contact.form.name' | t | default: 'Name' }}
                  {% if required_fields contains 'name' %}<span class="required">*</span>{% endif %}
                </label>
                <input
                  type="text"
                  id="contact-name-{{ unique }}"
                  name="contact[name]"
                  class="field-input"
                  value="{% if form.name %}{{ form.name }}{% endif %}"
                  {% if required_fields contains 'name' %}required{% endif %}
                  autocomplete="name"
                  aria-describedby="contact-name-error-{{ unique }}"
                >
                <div id="contact-name-error-{{ unique }}" class="field-error" role="alert"></div>
              </div>

              <div class="field-group">
                <label for="contact-email-{{ unique }}" class="field-label">
                  {{ 'contact.form.email' | t | default: 'Email' }}
                  <span class="required">*</span>
                </label>
                <input
                  type="email"
                  id="contact-email-{{ unique }}"
                  name="contact[email]"
                  class="field-input"
                  value="{% if form.email %}{{ form.email }}{% endif %}"
                  required
                  autocomplete="email"
                  aria-describedby="contact-email-error-{{ unique }}"
                >
                <div id="contact-email-error-{{ unique }}" class="field-error" role="alert"></div>
              </div>

              {%- if section.settings.show_phone -%}
                <div class="field-group">
                  <label for="contact-phone-{{ unique }}" class="field-label">
                    {{ 'contact.form.phone' | t | default: 'Phone' }}
                    {% if required_fields contains 'phone' %}<span class="required">*</span>{% endif %}
                  </label>
                  <input
                    type="tel"
                    id="contact-phone-{{ unique }}"
                    name="contact[phone]"
                    class="field-input"
                    value="{% if form.phone %}{{ form.phone }}{% endif %}"
                    {% if required_fields contains 'phone' %}required{% endif %}
                    autocomplete="tel"
                    aria-describedby="contact-phone-error-{{ unique }}"
                  >
                  <div id="contact-phone-error-{{ unique }}" class="field-error" role="alert"></div>
                </div>
              {%- endif -%}

              {%- if section.settings.show_subject -%}
                <div class="field-group">
                  <label for="contact-subject-{{ unique }}" class="field-label">
                    {{ 'contact.form.subject' | t | default: 'Subject' }}
                    {% if required_fields contains 'subject' %}<span class="required">*</span>{% endif %}
                  </label>
                  <input
                    type="text"
                    id="contact-subject-{{ unique }}"
                    name="contact[subject]"
                    class="field-input"
                    value="{% if form.subject %}{{ form.subject }}{% endif %}"
                    {% if required_fields contains 'subject' %}required{% endif %}
                    aria-describedby="contact-subject-error-{{ unique }}"
                  >
                  <div id="contact-subject-error-{{ unique }}" class="field-error" role="alert"></div>
                </div>
              {%- endif -%}

              <div class="field-group field-group-full">
                <label for="contact-message-{{ unique }}" class="field-label">
                  {{ 'contact.form.message' | t | default: 'Message' }}
                  <span class="required">*</span>
                </label>
                <textarea
                  id="contact-message-{{ unique }}"
                  name="contact[body]"
                  class="field-textarea"
                  rows="6"
                  required
                  aria-describedby="contact-message-error-{{ unique }}"
                  placeholder="{{ section.settings.message_placeholder | default: 'Tell us how we can help you...' | escape }}"
                >{% if form.body %}{{ form.body }}{% endif %}</textarea>
                <div id="contact-message-error-{{ unique }}" class="field-error" role="alert"></div>
              </div>

              {%- if enable_captcha -%}
                <div class="field-group field-group-full">
                  <div class="captcha-wrapper">
                    <!-- This would integrate with Shopify's spam protection or external CAPTCHA -->
                    <input type="hidden" name="contact[challenge]" value="" data-captcha-challenge>
                    <div class="captcha-notice">
                      <small>{{ 'contact.form.captcha_notice' | t | default: 'This form is protected by spam filters.' }}</small>
                    </div>
                  </div>
                </div>
              {%- endif -%}

              {%- if section.settings.privacy_text != blank -%}
                <div class="field-group field-group-full">
                  <label class="checkbox-label">
                    <input
                      type="checkbox"
                      name="contact[privacy_consent]"
                      id="contact-privacy-{{ unique }}"
                      class="checkbox-input"
                      required
                    >
                    <span class="checkbox-mark"></span>
                    <span class="checkbox-text">{{ section.settings.privacy_text }}</span>
                  </label>
                </div>
              {%- endif -%}
            </div>

            <div class="form-actions">
              <button
                type="submit"
                class="btn btn-{{ section.settings.button_style }} contact-submit"
                data-contact-submit
              >
                <span class="btn-text">{{ section.settings.button_text | default: 'Send message' | escape }}</span>
                <span class="btn-loading" style="display: none;">
                  <svg class="spinner" width="20" height="20" viewBox="0 0 20 20" aria-hidden="true">
                    <circle cx="10" cy="10" r="8" stroke="currentColor" stroke-width="2" fill="none" stroke-dasharray="31.416" stroke-dashoffset="31.416">
                      <animate attributeName="stroke-dasharray" dur="1s" values="0 31.416;15.708 15.708;0 31.416" repeatCount="indefinite"/>
                      <animate attributeName="stroke-dashoffset" dur="1s" values="0;-15.708;-31.416" repeatCount="indefinite"/>
                    </circle>
                  </svg>
                </span>
              </button>
            </div>
          {%- endif -%}
        {%- endform -%}
      </div>
    </div>
  </div>
</section>

<style>
/* Contact Form Section - {{ unique }} */
.contact-form-{{ unique }} {
  position: relative;
  isolation: isolate;
}

.contact-form-{{ unique }} .contact-form-container {
  width: 100%;
  margin: 0 auto;
  padding: 0 20px;
}

/* Layout */
.contact-form-{{ unique }} .contact-form-layout {
  display: grid;
  gap: 48px;
  align-items: start;
}

.contact-form-{{ unique }} .contact-form-layout.two-column {
  grid-template-columns: 1fr 1fr;
}

/* Content Styling */
.contact-form-{{ unique }} .contact-form-heading {
  margin: 0 0 16px 0;
  font-size: clamp(28px, 4vw, 48px);
  line-height: 1.2;
  font-weight: 700;
}

.contact-form-{{ unique }} .contact-form-subheading {
  margin: 0 0 24px 0;
  font-size: 18px;
  line-height: 1.5;
  opacity: 0.9;
}

.contact-form-{{ unique }} .contact-info {
  font-size: 16px;
  line-height: 1.6;
}

.contact-form-{{ unique }} .contact-info h3,
.contact-form-{{ unique }} .contact-info h4 {
  margin: 24px 0 8px 0;
  font-weight: 600;
}

.contact-form-{{ unique }} .contact-info p {
  margin: 0 0 12px 0;
}

.contact-form-{{ unique }} .contact-info a {
  color: var(--color-primary, #007bff);
  text-decoration: none;
}

.contact-form-{{ unique }} .contact-info a:hover {
  text-decoration: underline;
}

/* Form Styling */
.contact-form-{{ unique }} .contact-form {
  position: relative;
}

.contact-form-{{ unique }} .form-fields {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
  margin-bottom: 24px;
}

.contact-form-{{ unique }} .field-group {
  display: flex;
  flex-direction: column;
}

.contact-form-{{ unique }} .field-group-full {
  grid-column: 1 / -1;
}

/* Labels */
.contact-form-{{ unique }} .field-label {
  font-size: 14px;
  font-weight: 600;
  margin-bottom: 8px;
  color: inherit;
}

.contact-form-{{ unique }} .required {
  color: #dc3545;
  margin-left: 2px;
}

/* Input Fields */
.contact-form-{{ unique }} .field-input,
.contact-form-{{ unique }} .field-textarea {
  width: 100%;
  padding: 16px 20px;
  border: 2px solid rgba(0, 0, 0, 0.1);
  border-radius: 6px;
  font-size: 16px;
  font-family: inherit;
  background: rgba(255, 255, 255, 0.8);
  transition: all 0.3s ease;
}

.contact-form-{{ unique }} .field-input:focus,
.contact-form-{{ unique }} .field-textarea:focus {
  outline: none;
  border-color: var(--color-primary, #007bff);
  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
  background: #ffffff;
}

.contact-form-{{ unique }} .field-input::placeholder,
.contact-form-{{ unique }} .field-textarea::placeholder {
  color: rgba(0, 0, 0, 0.5);
}

.contact-form-{{ unique }} .field-textarea {
  resize: vertical;
  min-height: 120px;
}

/* Form Styles */
.contact-form-{{ unique }}.style-minimal .field-input,
.contact-form-{{ unique }}.style-minimal .field-textarea {
  border: none;
  border-bottom: 2px solid rgba(0, 0, 0, 0.2);
  border-radius: 0;
  background: transparent;
  padding: 12px 0;
}

.contact-form-{{ unique }}.style-bordered .field-input,
.contact-form-{{ unique }}.style-bordered .field-textarea {
  border-width: 3px;
  background: transparent;
}

.contact-form-{{ unique }}.style-filled .field-input,
.contact-form-{{ unique }}.style-filled .field-textarea {
  background: rgba(0, 0, 0, 0.05);
  border: 1px solid transparent;
}

/* Checkbox Styling */
.contact-form-{{ unique }} .checkbox-label {
  display: flex;
  align-items: flex-start;
  gap: 12px;
  cursor: pointer;
  font-size: 14px;
  line-height: 1.4;
}

.contact-form-{{ unique }} .checkbox-input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

.contact-form-{{ unique }} .checkbox-mark {
  width: 20px;
  height: 20px;
  border: 2px solid rgba(0, 0, 0, 0.3);
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  flex-shrink: 0;
  margin-top: 2px;
}

.contact-form-{{ unique }} .checkbox-input:checked + .checkbox-mark {
  background: var(--color-primary, #007bff);
  border-color: var(--color-primary, #007bff);
}

.contact-form-{{ unique }} .checkbox-input:checked + .checkbox-mark::after {
  content: '✓';
  color: white;
  font-size: 12px;
  font-weight: bold;
}

.contact-form-{{ unique }} .checkbox-input:focus + .checkbox-mark {
  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
}

/* Button Styling */
.contact-form-{{ unique }} .btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 16px 32px;
  border: 2px solid transparent;
  border-radius: 6px;
  font-size: 16px;
  font-weight: 600;
  text-decoration: none;
  cursor: pointer;
  transition: all 0.3s ease;
  min-height: 50px;
  min-width: 160px;
  position: relative;
}

.contact-form-{{ unique }} .btn:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.contact-form-{{ unique }} .btn:disabled {
  opacity: 0.7;
  cursor: not-allowed;
  transform: none;
}

.contact-form-{{ unique }} .btn-primary {
  background: var(--color-primary, #007bff);
  color: white;
}

.contact-form-{{ unique }} .btn-secondary {
  background: var(--color-secondary, #6c757d);
  color: white;
}

.contact-form-{{ unique }} .btn-outline {
  background: transparent;
  color: var(--color-primary, #007bff);
  border-color: var(--color-primary, #007bff);
}

.contact-form-{{ unique }} .btn.loading .btn-text {
  opacity: 0;
}

.contact-form-{{ unique }} .btn.loading .btn-loading {
  display: block !important;
  position: absolute;
}

/* Success and Error Messages */
.contact-form-{{ unique }} .form-success {
  background: #d4edda;
  color: #155724;
  padding: 24px;
  border-radius: 6px;
  border: 1px solid #c3e6cb;
  text-align: center;
}

.contact-form-{{ unique }} .success-heading {
  margin: 0 0 8px 0;
  font-size: 20px;
  font-weight: 600;
}

.contact-form-{{ unique }} .success-message {
  margin: 0;
  font-size: 16px;
}

.contact-form-{{ unique }} .form-errors {
  background: #f8d7da;
  color: #721c24;
  padding: 20px;
  border-radius: 6px;
  border: 1px solid #f5c6cb;
  margin-bottom: 24px;
}

.contact-form-{{ unique }} .error-heading {
  margin: 0 0 12px 0;
  font-size: 16px;
  font-weight: 600;
}

.contact-form-{{ unique }} .error-list {
  margin: 0;
  padding-left: 20px;
}

.contact-form-{{ unique }} .error-item {
  margin-bottom: 4px;
}

.contact-form-{{ unique }} .field-error {
  color: #dc3545;
  font-size: 14px;
  margin-top: 6px;
  min-height: 20px;
}

.contact-form-{{ unique }} .field-error:not(:empty) {
  display: block;
}

/* CAPTCHA */
.contact-form-{{ unique }} .captcha-notice {
  padding: 12px;
  background: rgba(0, 0, 0, 0.05);
  border-radius: 4px;
  text-align: center;
}

/* Color Schemes */
.contact-form-{{ unique }}.color-scheme-light {
  background: #ffffff;
  color: #333333;
}

.contact-form-{{ unique }}.color-scheme-dark {
  background: #1a1a1a;
  color: #ffffff;
}

.contact-form-{{ unique }}.color-scheme-dark .field-input,
.contact-form-{{ unique }}.color-scheme-dark .field-textarea {
  background: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.2);
  color: white;
}

.contact-form-{{ unique }}.color-scheme-dark .field-input::placeholder,
.contact-form-{{ unique }}.color-scheme-dark .field-textarea::placeholder {
  color: rgba(255, 255, 255, 0.6);
}

.contact-form-{{ unique }}.color-scheme-dark .checkbox-mark {
  border-color: rgba(255, 255, 255, 0.3);
}

/* Text Alignment */
.contact-form-{{ unique }} .text-left {
  text-align: left;
}

.contact-form-{{ unique }} .text-center {
  text-align: center;
}

.contact-form-{{ unique }} .text-right {
  text-align: right;
}

/* Responsive Design */
@media (max-width: 990px) {
  .contact-form-{{ unique }} .contact-form-layout.two-column {
    grid-template-columns: 1fr;
    gap: 32px;
  }
}

@media (max-width: 749px) {
  .contact-form-{{ unique }} .contact-form-container {
    padding: 0 16px;
  }

  .contact-form-{{ unique }} .form-fields {
    grid-template-columns: 1fr;
    gap: 16px;
  }

  .contact-form-{{ unique }} .field-input,
  .contact-form-{{ unique }} .field-textarea {
    padding: 14px 16px;
    font-size: 16px; /* Prevents zoom on iOS */
  }

  .contact-form-{{ unique }} .btn {
    width: 100%;
    padding: 14px 24px;
  }

  .contact-form-{{ unique }} .contact-form-layout {
    gap: 24px;
  }
}

@media (max-width: 480px) {
  .contact-form-{{ unique }} .contact-form-container {
    padding: 0 12px;
  }

  .contact-form-{{ unique }} .field-input,
  .contact-form-{{ unique }} .field-textarea {
    padding: 12px 14px;
  }

  .contact-form-{{ unique }} .form-fields {
    gap: 14px;
  }
}

/* Focus styles for accessibility */
.contact-form-{{ unique }} .btn:focus,
.contact-form-{{ unique }} .field-input:focus,
.contact-form-{{ unique }} .field-textarea:focus,
.contact-form-{{ unique }} .checkbox-input:focus + .checkbox-mark {
  outline: 2px solid var(--color-primary, #007bff);
  outline-offset: 2px;
}

/* High contrast mode */
@media (prefers-contrast: high) {
  .contact-form-{{ unique }} .field-input,
  .contact-form-{{ unique }} .field-textarea {
    border-width: 3px;
  }

  .contact-form-{{ unique }} .checkbox-mark {
    border-width: 3px;
  }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .contact-form-{{ unique }} * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Loading Animation */
.contact-form-{{ unique }} .spinner {
  animation: contact-spin-{{ unique }} 1s linear infinite;
}

@keyframes contact-spin-{{ unique }} {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
</style>

<script>
(function() {
  'use strict';

  const sectionId = '{{ unique }}';
  const form = document.getElementById(`contact-form-${sectionId}`);

  if (!form) return;

  const submitButton = form.querySelector('[data-contact-submit]');
  const fields = form.querySelectorAll('.field-input, .field-textarea');

  // Email validation
  function validateEmail(email) {
    const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return re.test(email);
  }

  // Phone validation
  function validatePhone(phone) {
    const re = /^[\+]?[1-9][\d]{0,15}$/;
    return re.test(phone.replace(/\s/g, ''));
  }

  // Show field error
  function showFieldError(field, message) {
    const errorElement = document.getElementById(field.getAttribute('aria-describedby'));
    if (errorElement) {
      errorElement.textContent = message;
      field.setAttribute('aria-invalid', 'true');
    }
  }

  // Hide field error
  function hideFieldError(field) {
    const errorElement = document.getElementById(field.getAttribute('aria-describedby'));
    if (errorElement) {
      errorElement.textContent = '';
      field.removeAttribute('aria-invalid');
    }
  }

  // Validate single field
  function validateField(field) {
    const value = field.value.trim();
    const fieldType = field.type;
    const isRequired = field.hasAttribute('required');
    let isValid = true;

    // Clear previous errors
    hideFieldError(field);

    // Required field validation
    if (isRequired && !value) {
      showFieldError(field, 'This field is required.');
      isValid = false;
    }

    // Type-specific validation
    if (value && fieldType === 'email' && !validateEmail(value)) {
      showFieldError(field, 'Please enter a valid email address.');
      isValid = false;
    }

    if (value && fieldType === 'tel' && !validatePhone(value)) {
      showFieldError(field, 'Please enter a valid phone number.');
      isValid = false;
    }

    return isValid;
  }

  // Real-time validation
  fields.forEach(field => {
    field.addEventListener('blur', () => validateField(field));
    field.addEventListener('input', () => {
      if (field.getAttribute('aria-invalid') === 'true') {
        validateField(field);
      }
    });
  });

  // Set loading state
  function setLoadingState(loading) {
    submitButton.classList.toggle('loading', loading);
    submitButton.disabled = loading;
    fields.forEach(field => field.disabled = loading);
  }

  // Form submission
  form.addEventListener('submit', function(e) {
    let isFormValid = true;

    // Validate all fields
    fields.forEach(field => {
      if (!validateField(field)) {
        isFormValid = false;
      }
    });

    // Validate privacy consent if present
    const privacyCheckbox = form.querySelector('#contact-privacy-{{ unique }}');
    if (privacyCheckbox && !privacyCheckbox.checked) {
      alert('Please agree to the privacy policy to continue.');
      isFormValid = false;
    }

    if (!isFormValid) {
      e.preventDefault();
      // Focus first invalid field
      const firstInvalidField = form.querySelector('[aria-invalid="true"]');
      if (firstInvalidField) {
        firstInvalidField.focus();
      }
      return;
    }

    // Set loading state
    setLoadingState(true);

    // Analytics tracking (if available)
    if (typeof gtag !== 'undefined') {
      gtag('event', 'form_submit', {
        'event_category': 'engagement',
        'event_label': 'contact_form'
      });
    }

    // Facebook Pixel (if available)
    if (typeof fbq !== 'undefined') {
      fbq('track', 'Contact');
    }
  });

  // Character counter for textarea
  const textarea = form.querySelector('.field-textarea');
  if (textarea) {
    const maxLength = 1000;

    // Add character counter
    const counterDiv = document.createElement('div');
    counterDiv.className = 'character-counter';
    counterDiv.style.cssText = 'font-size: 12px; color: rgba(0,0,0,0.6); margin-top: 4px; text-align: right;';
    textarea.parentNode.appendChild(counterDiv);

    function updateCounter() {
      const remaining = maxLength - textarea.value.length;
      counterDiv.textContent = `${remaining} characters remaining`;

      if (remaining < 0) {
        counterDiv.style.color = '#dc3545';
        textarea.setCustomValidity('Message is too long');
      } else {
        counterDiv.style.color = 'rgba(0,0,0,0.6)';
        textarea.setCustomValidity('');
      }
    }

    textarea.addEventListener('input', updateCounter);
    updateCounter();
  }

  // Enhanced keyboard navigation
  form.addEventListener('keydown', function(e) {
    if (e.key === 'Enter' && e.target.tagName !== 'TEXTAREA') {
      e.preventDefault();

      // Find next focusable element
      const focusableElements = form.querySelectorAll('input, textarea, button');
      const currentIndex = Array.from(focusableElements).indexOf(e.target);
      const nextElement = focusableElements[currentIndex + 1];

      if (nextElement) {
        nextElement.focus();
      } else {
        submitButton.focus();
      }
    }
  });
})();
</script>

{% schema %}
{
  "name": "Contact form",
  "tag": "section",
  "class": "section-contact-form",
  "disabled_on": {
    "groups": [
      "header",
      "footer"
    ]
  },
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Contact us"
    },
    {
      "type": "richtext",
      "id": "subheading",
      "label": "Subheading",
      "default": "<p>We'd love to hear from you. Send us a message and we'll respond as soon as possible.</p>"
    },
    {
      "type": "richtext",
      "id": "contact_info",
      "label": "Contact information",
      "info": "Optional contact details displayed alongside the form"
    },
    {
      "type": "header",
      "content": "Form Fields"
    },
    {
      "type": "checkbox",
      "id": "show_phone",
      "label": "Show phone field",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_subject",
      "label": "Show subject field",
      "default": true
    },
    {
      "type": "text",
      "id": "message_placeholder",
      "label": "Message placeholder",
      "default": "Tell us how we can help you..."
    },
    {
      "type": "text",
      "id": "required_fields",
      "label": "Required fields",
      "default": "name,email",
      "info": "Comma-separated list: name, email, phone, subject. Email is always required."
    },
    {
      "type": "header",
      "content": "Privacy & Security"
    },
    {
      "type": "richtext",
      "id": "privacy_text",
      "label": "Privacy consent text",
      "info": "If provided, adds a required checkbox for privacy consent"
    },
    {
      "type": "checkbox",
      "id": "enable_captcha",
      "label": "Enable spam protection",
      "default": true,
      "info": "Adds basic spam protection"
    },
    {
      "type": "header",
      "content": "Success Messages"
    },
    {
      "type": "text",
      "id": "success_title",
      "label": "Success title",
      "default": "Thank you!"
    },
    {
      "type": "text",
      "id": "success_message",
      "label": "Success message",
      "default": "Your message has been sent successfully. We'll get back to you soon!"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "Send message"
    },
    {
      "type": "select",
      "id": "button_style",
      "label": "Button style",
      "options": [
        {
          "value": "primary",
          "label": "Primary"
        },
        {
          "value": "secondary",
          "label": "Secondary"
        },
        {
          "value": "outline",
          "label": "Outline"
        }
      ],
      "default": "primary"
    },
    {
      "type": "header",
      "content": "Design"
    },
    {
      "type": "select",
      "id": "form_style",
      "label": "Form style",
      "options": [
        {
          "value": "standard",
          "label": "Standard"
        },
        {
          "value": "minimal",
          "label": "Minimal"
        },
        {
          "value": "bordered",
          "label": "Bordered"
        },
        {
          "value": "filled",
          "label": "Filled"
        }
      ],
      "default": "standard"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "label": "Color scheme",
      "options": [
        {
          "value": "light",
          "label": "Light"
        },
        {
          "value": "dark",
          "label": "Dark"
        }
      ],
      "default": "light"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "checkbox",
      "id": "enable_two_column",
      "label": "Two column layout",
      "default": false,
      "info": "Places content and form side by side on desktop"
    },
    {
      "type": "range",
      "id": "max_width",
      "label": "Maximum width",
      "min": 600,
      "max": 1200,
      "step": 50,
      "unit": "px",
      "default": 800
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "label": "Padding top",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "default": 60
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "label": "Padding bottom",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "default": 60
    }
  ],
  "presets": [
    {
      "name": "Contact form",
      "settings": {
        "heading": "Contact us",
        "subheading": "<p>We'd love to hear from you. Send us a message and we'll respond as soon as possible.</p>",
        "show_phone": true,
        "show_subject": true,
        "form_style": "standard",
        "text_alignment": "left",
        "color_scheme": "light",
        "enable_two_column": false,
        "section_padding_top": 60,
        "section_padding_bottom": 60
      }
    }
  ]
}
{% endschema %}