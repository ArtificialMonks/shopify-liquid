<!-- Announcement Bar Section - Marketing & Promotions -->
{%- liquid
  assign unique = section.id | replace: '_', '' | downcase
  assign bar_style = section.settings.bar_style
  assign text_alignment = section.settings.text_alignment
  assign color_scheme = section.settings.color_scheme
  assign enable_marquee = section.settings.enable_marquee
  assign enable_dismiss = section.settings.enable_dismiss
  assign show_icon = section.settings.show_icon
  assign enable_countdown = section.settings.enable_countdown
  assign countdown_date = section.settings.countdown_date
  assign sticky_position = section.settings.sticky_position
-%}

<section
  id="announcement-bar-{{ unique }}"
  class="announcement-bar-section announcement-bar-{{ unique }} color-scheme-{{ color_scheme }} style-{{ bar_style }} position-{{ sticky_position }}"
  data-section-id="{{ section.id }}"
  data-section-type="announcement-bar"
  {% if enable_dismiss %}data-dismissible{% endif %}
  {% if enable_marquee %}data-marquee{% endif %}
  {% if enable_countdown and countdown_date != blank %}data-countdown="{{ countdown_date }}"{% endif %}
  role="banner"
  aria-label="Announcement"
>
  <div class="announcement-bar-container">
    <div class="announcement-bar-content text-{{ text_alignment }}">
      {%- if show_icon and section.settings.icon != blank -%}
        <div class="announcement-icon" aria-hidden="true">
          {%- case section.settings.icon -%}
            {%- when 'sale' -%}
              <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 2L13.09 8.26L22 9L13.09 15.74L12 22L10.91 15.74L2 9L10.91 8.26L12 2Z"/>
              </svg>
            {%- when 'shipping' -%}
              <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                <path d="M19 7h-3V6a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1v7H3a1 1 0 0 0-1 1v2a3 3 0 0 0 3 3h1.05A3 3 0 0 0 11 18a3 3 0 0 0 5.95.05H18a3 3 0 0 0 3-3v-5a1 1 0 0 0-.29-.71l-2-2A1 1 0 0 0 19 7z"/>
              </svg>
            {%- when 'announcement' -%}
              <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
              </svg>
            {%- when 'gift' -%}
              <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                <path d="M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-2 .89-2 2v4c0 1.11.89 2 2 2h1v6c0 1.11.89 2 2 2h10c1.11 0 2-.89 2-2v-6h1c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm6 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1z"/>
              </svg>
            {%- when 'new' -%}
              <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
              </svg>
            {%- else -%}
              <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
              </svg>
          {%- endcase -%}
        </div>
      {%- endif -%}

      <div class="announcement-text-wrapper{% if enable_marquee %} marquee-wrapper{% endif %}">
        {%- if enable_marquee -%}
          <div class="marquee-content" data-marquee-content>
        {%- endif -%}

        {%- if section.settings.text != blank -%}
          <div class="announcement-text">
            {{ section.settings.text }}
          </div>
        {%- endif -%}

        {%- if enable_countdown and countdown_date != blank -%}
          <div class="countdown-timer" data-countdown-timer aria-live="polite">
            <span class="countdown-days">
              <span data-countdown-days>00</span>
              <small>{{ 'general.countdown.days' | t | default: 'days' }}</small>
            </span>
            <span class="countdown-separator">:</span>
            <span class="countdown-hours">
              <span data-countdown-hours>00</span>
              <small>{{ 'general.countdown.hours' | t | default: 'hrs' }}</small>
            </span>
            <span class="countdown-separator">:</span>
            <span class="countdown-minutes">
              <span data-countdown-minutes>00</span>
              <small>{{ 'general.countdown.minutes' | t | default: 'min' }}</small>
            </span>
            <span class="countdown-separator">:</span>
            <span class="countdown-seconds">
              <span data-countdown-seconds>00</span>
              <small>{{ 'general.countdown.seconds' | t | default: 'sec' }}</small>
            </span>
          </div>
        {%- endif -%}

        {%- if enable_marquee -%}
          </div>
        {%- endif -%}
      </div>

      {%- if section.settings.button_text != blank and section.settings.button_url != blank -%}
        <a
          href="{{ section.settings.button_url }}"
          class="announcement-button btn btn-{{ section.settings.button_style }}"
          {% if section.settings.button_url contains 'http' %}
            target="_blank"
            rel="noopener noreferrer"
          {% endif %}
        >
          {{ section.settings.button_text | escape }}
        </a>
      {%- endif -%}

      {%- if enable_dismiss -%}
        <button
          type="button"
          class="announcement-dismiss"
          aria-label="{{ 'general.accessibility.close' | t | default: 'Close announcement' }}"
          data-dismiss
        >
          <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
            <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
          </svg>
        </button>
      {%- endif -%}
    </div>
  </div>
</section>

<style>
/* Announcement Bar Section - {{ unique }} */
.announcement-bar-{{ unique }} {
  position: relative;
  z-index: 200;
  overflow: hidden;
}

.announcement-bar-{{ unique }}.position-top {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
}

.announcement-bar-{{ unique }}.position-bottom {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
}

.announcement-bar-{{ unique }}.position-static {
  position: relative;
}

/* Container */
.announcement-bar-{{ unique }} .announcement-bar-container {
  width: 100%;
  padding: 12px 20px;
  min-height: 48px;
  display: flex;
  align-items: center;
}

.announcement-bar-{{ unique }} .announcement-bar-content {
  width: 100%;
  display: flex;
  align-items: center;
  gap: 16px;
  position: relative;
}

/* Bar Styles */
.announcement-bar-{{ unique }}.style-minimal {
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

.announcement-bar-{{ unique }}.style-bordered {
  border-top: 2px solid var(--color-primary, #007bff);
  border-bottom: 2px solid var(--color-primary, #007bff);
}

.announcement-bar-{{ unique }}.style-gradient {
  background: linear-gradient(135deg, var(--color-primary, #007bff), var(--color-secondary, #6c757d));
}

.announcement-bar-{{ unique }}.style-shadow {
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);
}

/* Icon */
.announcement-bar-{{ unique }} .announcement-icon {
  flex-shrink: 0;
  color: inherit;
  opacity: 0.9;
}

/* Text Content */
.announcement-bar-{{ unique }} .announcement-text-wrapper {
  flex: 1;
  min-width: 0;
}

.announcement-bar-{{ unique }} .announcement-text {
  font-size: 14px;
  line-height: 1.4;
  font-weight: 500;
}

.announcement-bar-{{ unique }} .announcement-text a {
  color: inherit;
  text-decoration: underline;
}

.announcement-bar-{{ unique }} .announcement-text a:hover {
  text-decoration: none;
}

/* Marquee Effect */
.announcement-bar-{{ unique }} .marquee-wrapper {
  overflow: hidden;
  position: relative;
}

.announcement-bar-{{ unique }} .marquee-content {
  display: flex;
  align-items: center;
  gap: 32px;
  white-space: nowrap;
  animation: marquee-{{ unique }} 20s linear infinite;
}

@keyframes marquee-{{ unique }} {
  0% { transform: translateX(100%); }
  100% { transform: translateX(-100%); }
}

.announcement-bar-{{ unique }} .marquee-content:hover {
  animation-play-state: paused;
}

/* Countdown Timer */
.announcement-bar-{{ unique }} .countdown-timer {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 14px;
  font-weight: 600;
  margin-left: 16px;
}

.announcement-bar-{{ unique }} .countdown-timer > span {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-width: 24px;
}

.announcement-bar-{{ unique }} .countdown-timer small {
  font-size: 10px;
  opacity: 0.8;
  font-weight: 400;
  line-height: 1;
  margin-top: 2px;
}

.announcement-bar-{{ unique }} .countdown-separator {
  font-weight: bold;
  opacity: 0.6;
  margin: 0 4px;
}

/* Button */
.announcement-bar-{{ unique }} .announcement-button {
  flex-shrink: 0;
  padding: 8px 16px;
  border-radius: 4px;
  font-size: 12px;
  font-weight: 600;
  text-decoration: none;
  transition: all 0.2s ease;
  border: 1px solid transparent;
  min-height: 32px;
  display: flex;
  align-items: center;
  white-space: nowrap;
}

.announcement-bar-{{ unique }} .btn-primary {
  background: var(--color-primary, #007bff);
  color: white;
}

.announcement-bar-{{ unique }} .btn-secondary {
  background: var(--color-secondary, #6c757d);
  color: white;
}

.announcement-bar-{{ unique }} .btn-outline {
  background: transparent;
  color: inherit;
  border-color: currentColor;
}

.announcement-bar-{{ unique }} .btn-ghost {
  background: rgba(255, 255, 255, 0.2);
  color: inherit;
  border: none;
}

.announcement-bar-{{ unique }} .announcement-button:hover {
  transform: translateY(-1px);
  opacity: 0.9;
}

/* Dismiss Button */
.announcement-bar-{{ unique }} .announcement-dismiss {
  flex-shrink: 0;
  background: none;
  border: none;
  color: inherit;
  cursor: pointer;
  padding: 8px;
  border-radius: 4px;
  transition: all 0.2s ease;
  opacity: 0.7;
  margin-left: auto;
}

.announcement-bar-{{ unique }} .announcement-dismiss:hover {
  opacity: 1;
  background: rgba(0, 0, 0, 0.1);
}

.announcement-bar-{{ unique }} .announcement-dismiss:focus {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

/* Color Schemes */
.announcement-bar-{{ unique }}.color-scheme-primary {
  background: var(--color-primary, #007bff);
  color: white;
}

.announcement-bar-{{ unique }}.color-scheme-secondary {
  background: var(--color-secondary, #6c757d);
  color: white;
}

.announcement-bar-{{ unique }}.color-scheme-success {
  background: #28a745;
  color: white;
}

.announcement-bar-{{ unique }}.color-scheme-warning {
  background: #ffc107;
  color: #212529;
}

.announcement-bar-{{ unique }}.color-scheme-danger {
  background: #dc3545;
  color: white;
}

.announcement-bar-{{ unique }}.color-scheme-light {
  background: #f8f9fa;
  color: #212529;
}

.announcement-bar-{{ unique }}.color-scheme-dark {
  background: #212529;
  color: white;
}

/* Text Alignment */
.announcement-bar-{{ unique }} .text-left {
  justify-content: flex-start;
}

.announcement-bar-{{ unique }} .text-center {
  justify-content: center;
}

.announcement-bar-{{ unique }} .text-right {
  justify-content: flex-end;
}

/* Hidden State */
.announcement-bar-{{ unique }}.is-hidden {
  transform: translateY(-100%);
  opacity: 0;
  pointer-events: none;
}

.announcement-bar-{{ unique }}.position-bottom.is-hidden {
  transform: translateY(100%);
}

/* Responsive Design */
@media (max-width: 749px) {
  .announcement-bar-{{ unique }} .announcement-bar-container {
    padding: 10px 16px;
  }

  .announcement-bar-{{ unique }} .announcement-bar-content {
    gap: 12px;
  }

  .announcement-bar-{{ unique }} .announcement-text {
    font-size: 13px;
  }

  .announcement-bar-{{ unique }} .countdown-timer {
    gap: 6px;
    margin-left: 12px;
  }

  .announcement-bar-{{ unique }} .countdown-timer small {
    font-size: 9px;
  }

  .announcement-bar-{{ unique }} .announcement-button {
    padding: 6px 12px;
    font-size: 11px;
  }

  /* Stack vertically on very small screens */
  .announcement-bar-{{ unique }} .announcement-bar-content {
    flex-wrap: wrap;
    justify-content: center;
    text-align: center;
  }

  .announcement-bar-{{ unique }} .announcement-text-wrapper {
    order: 1;
    width: 100%;
  }

  .announcement-bar-{{ unique }} .announcement-button {
    order: 2;
  }

  .announcement-bar-{{ unique }} .announcement-dismiss {
    order: 3;
    position: absolute;
    top: 4px;
    right: 4px;
    margin: 0;
  }
}

@media (max-width: 480px) {
  .announcement-bar-{{ unique }} .announcement-bar-container {
    padding: 8px 12px;
  }

  .announcement-bar-{{ unique }} .countdown-timer {
    flex-wrap: wrap;
    gap: 4px;
  }

  .announcement-bar-{{ unique }} .countdown-separator {
    display: none;
  }
}

/* High contrast mode */
@media (prefers-contrast: high) {
  .announcement-bar-{{ unique }} {
    border: 2px solid currentColor;
  }

  .announcement-bar-{{ unique }} .announcement-button {
    border-width: 2px;
  }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .announcement-bar-{{ unique }} .marquee-content {
    animation: none;
  }

  .announcement-bar-{{ unique }} * {
    transition-duration: 0.01ms !important;
  }
}

/* Print styles */
@media print {
  .announcement-bar-{{ unique }} {
    position: static !important;
    box-shadow: none !important;
  }

  .announcement-bar-{{ unique }} .announcement-dismiss {
    display: none;
  }
}
</style>

<script>
(function() {
  'use strict';

  const sectionId = '{{ unique }}';
  const announcementBar = document.getElementById(`announcement-bar-${sectionId}`);

  if (!announcementBar) return;

  // Dismiss functionality
  const dismissButton = announcementBar.querySelector('[data-dismiss]');
  if (dismissButton) {
    dismissButton.addEventListener('click', function() {
      announcementBar.classList.add('is-hidden');

      // Store dismissed state in localStorage
      try {
        localStorage.setItem(`announcement-dismissed-${sectionId}`, 'true');
      } catch (e) {
        // Handle cases where localStorage is not available
      }

      // Analytics tracking (if available)
      if (typeof gtag !== 'undefined') {
        gtag('event', 'announcement_dismiss', {
          'event_category': 'engagement',
          'event_label': 'announcement_bar'
        });
      }
    });

    // Check if announcement was previously dismissed
    try {
      if (localStorage.getItem(`announcement-dismissed-${sectionId}`) === 'true') {
        announcementBar.classList.add('is-hidden');
      }
    } catch (e) {
      // Handle cases where localStorage is not available
    }
  }

  // Countdown functionality
  const countdownElement = announcementBar.querySelector('[data-countdown-timer]');
  const countdownDate = announcementBar.dataset.countdown;

  if (countdownElement && countdownDate) {
    const daysElement = countdownElement.querySelector('[data-countdown-days]');
    const hoursElement = countdownElement.querySelector('[data-countdown-hours]');
    const minutesElement = countdownElement.querySelector('[data-countdown-minutes]');
    const secondsElement = countdownElement.querySelector('[data-countdown-seconds]');

    const targetDate = new Date(countdownDate).getTime();

    function updateCountdown() {
      const now = new Date().getTime();
      const distance = targetDate - now;

      if (distance < 0) {
        // Countdown finished
        countdownElement.innerHTML = '<span>{{ "general.countdown.expired" | t | default: "Offer expired" }}</span>';
        return;
      }

      const days = Math.floor(distance / (1000 * 60 * 60 * 24));
      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((distance % (1000 * 60)) / 1000);

      if (daysElement) daysElement.textContent = String(days).padStart(2, '0');
      if (hoursElement) hoursElement.textContent = String(hours).padStart(2, '0');
      if (minutesElement) minutesElement.textContent = String(minutes).padStart(2, '0');
      if (secondsElement) secondsElement.textContent = String(seconds).padStart(2, '0');
    }

    // Update countdown immediately and then every second
    updateCountdown();
    const countdownInterval = setInterval(updateCountdown, 1000);

    // Clean up interval when the announcement is dismissed
    if (dismissButton) {
      dismissButton.addEventListener('click', function() {
        clearInterval(countdownInterval);
      });
    }
  }

  // Marquee functionality
  if (announcementBar.hasAttribute('data-marquee')) {
    const marqueeContent = announcementBar.querySelector('[data-marquee-content]');

    if (marqueeContent) {
      // Pause animation on hover for accessibility
      marqueeContent.addEventListener('mouseenter', function() {
        this.style.animationPlayState = 'paused';
      });

      marqueeContent.addEventListener('mouseleave', function() {
        this.style.animationPlayState = 'running';
      });

      // Pause animation on focus for accessibility
      marqueeContent.addEventListener('focusin', function() {
        this.style.animationPlayState = 'paused';
      });

      marqueeContent.addEventListener('focusout', function() {
        this.style.animationPlayState = 'running';
      });
    }
  }

  // Analytics tracking for button clicks
  const announcementButton = announcementBar.querySelector('.announcement-button');
  if (announcementButton) {
    announcementButton.addEventListener('click', function() {
      // Google Analytics tracking (if available)
      if (typeof gtag !== 'undefined') {
        gtag('event', 'announcement_click', {
          'event_category': 'engagement',
          'event_label': this.textContent.trim()
        });
      }

      // Facebook Pixel tracking (if available)
      if (typeof fbq !== 'undefined') {
        fbq('track', 'ViewContent', {
          content_name: 'Announcement Bar',
          content_category: 'Promotion'
        });
      }
    });
  }

  // Adjust page layout for fixed positioning
  if (announcementBar.classList.contains('position-top')) {
    document.body.style.paddingTop = announcementBar.offsetHeight + 'px';

    // Update padding when announcement is dismissed
    if (dismissButton) {
      dismissButton.addEventListener('click', function() {
        setTimeout(() => {
          document.body.style.paddingTop = '0';
        }, 300); // Match CSS transition duration
      });
    }
  }

  if (announcementBar.classList.contains('position-bottom')) {
    document.body.style.paddingBottom = announcementBar.offsetHeight + 'px';

    // Update padding when announcement is dismissed
    if (dismissButton) {
      dismissButton.addEventListener('click', function() {
        setTimeout(() => {
          document.body.style.paddingBottom = '0';
        }, 300); // Match CSS transition duration
      });
    }
  }
})();
</script>

{% schema %}
{
  "name": "Announcement bar",
  "tag": "section",
  "class": "section-announcement-bar",
  "disabled_on": {
    "groups": [
      "footer"
    ]
  },
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "richtext",
      "id": "text",
      "label": "Announcement text",
      "default": "<p><strong>Free shipping</strong> on orders over $50! Use code: FREESHIP</p>"
    },
    {
      "type": "select",
      "id": "icon",
      "label": "Icon",
      "options": [
        {
          "value": "",
          "label": "None"
        },
        {
          "value": "sale",
          "label": "Sale"
        },
        {
          "value": "shipping",
          "label": "Shipping"
        },
        {
          "value": "announcement",
          "label": "Announcement"
        },
        {
          "value": "gift",
          "label": "Gift"
        },
        {
          "value": "new",
          "label": "New"
        }
      ],
      "default": "sale"
    },
    {
      "type": "checkbox",
      "id": "show_icon",
      "label": "Show icon",
      "default": true
    },
    {
      "type": "header",
      "content": "Call to Action"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text"
    },
    {
      "type": "url",
      "id": "button_url",
      "label": "Button link"
    },
    {
      "type": "select",
      "id": "button_style",
      "label": "Button style",
      "options": [
        {
          "value": "primary",
          "label": "Primary"
        },
        {
          "value": "secondary",
          "label": "Secondary"
        },
        {
          "value": "outline",
          "label": "Outline"
        },
        {
          "value": "ghost",
          "label": "Ghost"
        }
      ],
      "default": "outline"
    },
    {
      "type": "header",
      "content": "Countdown Timer"
    },
    {
      "type": "checkbox",
      "id": "enable_countdown",
      "label": "Enable countdown timer",
      "default": false
    },
    {
      "type": "text",
      "id": "countdown_date",
      "label": "Countdown end date",
      "info": "Format: YYYY-MM-DD HH:MM:SS (e.g., 2024-12-31 23:59:59)"
    },
    {
      "type": "header",
      "content": "Behavior"
    },
    {
      "type": "checkbox",
      "id": "enable_marquee",
      "label": "Enable scrolling text",
      "default": false,
      "info": "Text will scroll horizontally"
    },
    {
      "type": "checkbox",
      "id": "enable_dismiss",
      "label": "Allow dismissing",
      "default": true,
      "info": "Shows close button and remembers dismissal"
    },
    {
      "type": "select",
      "id": "sticky_position",
      "label": "Position",
      "options": [
        {
          "value": "top",
          "label": "Fixed at top"
        },
        {
          "value": "bottom",
          "label": "Fixed at bottom"
        },
        {
          "value": "static",
          "label": "Static (in flow)"
        }
      ],
      "default": "top"
    },
    {
      "type": "header",
      "content": "Design"
    },
    {
      "type": "select",
      "id": "bar_style",
      "label": "Bar style",
      "options": [
        {
          "value": "minimal",
          "label": "Minimal"
        },
        {
          "value": "bordered",
          "label": "Bordered"
        },
        {
          "value": "gradient",
          "label": "Gradient"
        },
        {
          "value": "shadow",
          "label": "Shadow"
        }
      ],
      "default": "minimal"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "label": "Color scheme",
      "options": [
        {
          "value": "primary",
          "label": "Primary"
        },
        {
          "value": "secondary",
          "label": "Secondary"
        },
        {
          "value": "success",
          "label": "Success"
        },
        {
          "value": "warning",
          "label": "Warning"
        },
        {
          "value": "danger",
          "label": "Danger"
        },
        {
          "value": "light",
          "label": "Light"
        },
        {
          "value": "dark",
          "label": "Dark"
        }
      ],
      "default": "primary"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    }
  ],
  "presets": [
    {
      "name": "Announcement bar",
      "settings": {
        "text": "<p><strong>Free shipping</strong> on orders over $50! Use code: FREESHIP</p>",
        "icon": "sale",
        "show_icon": true,
        "button_text": "Shop now",
        "button_style": "outline",
        "enable_dismiss": true,
        "sticky_position": "top",
        "bar_style": "minimal",
        "color_scheme": "primary",
        "text_alignment": "center"
      }
    }
  ]
}
{% endschema %}